digraph NextDay_method {
    "net.mooctest.Year.increment()Z"->"net.mooctest.YearTest.testIncrement1()V";
    "net.mooctest.Date.getDay()Lnet/mooctest/Day;"->"net.mooctest.DateTest.testIncrement3()V";
    "net.mooctest.Date.<init>(III)V"->"net.mooctest.DateTest.testIncrement3()V";
    "net.mooctest.Date.increment()V"->"net.mooctest.DateTest.testIncrement3()V";
    "net.mooctest.Date.getYear()Lnet/mooctest/Year;"->"net.mooctest.DateTest.testIncrement3()V";
    "net.mooctest.Date.getMonth()Lnet/mooctest/Month;"->"net.mooctest.DateTest.testIncrement3()V";
    "net.mooctest.Month.equals(Ljava/lang/Object;)Z"->"net.mooctest.MonthTest.testEquals1()V";
    "net.mooctest.Month.<init>(ILnet/mooctest/Year;)V"->"net.mooctest.MonthTest.testEquals1()V";
    "net.mooctest.Year.increment()Z"->"net.mooctest.YearTest.testIncrement2()V";
    "net.mooctest.Month.equals(Ljava/lang/Object;)Z"->"net.mooctest.MonthTest.testEquals2()V";
    "net.mooctest.Year.increment()Z"->"net.mooctest.YearTest.testIncrement3()V";
    "net.mooctest.Month.equals(Ljava/lang/Object;)Z"->"net.mooctest.MonthTest.testEquals3()V";
    "net.mooctest.Month.<init>(ILnet/mooctest/Year;)V"->"net.mooctest.MonthTest.testEquals3()V";
    "net.mooctest.Year.increment()Z"->"net.mooctest.YearTest.testIncrement4()V";
    "net.mooctest.Year.getYear()I"->"net.mooctest.YearTest.testGetYear()V";
    "net.mooctest.CalendarUnit.<init>()V"->"net.mooctest.Year.<init>(I)V";
    "net.mooctest.Year.setYear(I)V"->"net.mooctest.Year.<init>(I)V";
    "net.mooctest.Year.isValid()Z"->"net.mooctest.YearTest.testIsValid1()V";
    "net.mooctest.Month.equals(Ljava/lang/Object;)Z"->"net.mooctest.MonthTest.testEquals4()V";
    "net.mooctest.Month.<init>(ILnet/mooctest/Year;)V"->"net.mooctest.MonthTest.testEquals4()V";
    "net.mooctest.Year.increment()Z"->"net.mooctest.YearTest.testIncrement5()V";
    "net.mooctest.Date.equals(Ljava/lang/Object;)Z"->"net.mooctest.DateTest.testEquals1()V";
    "net.mooctest.Month.setMonth(ILnet/mooctest/Year;)V"->"net.mooctest.MonthTest.testSetMonth1()V";
    "net.mooctest.Year.isValid()Z"->"net.mooctest.YearTest.testIsValid2()V";
    "net.mooctest.Month.equals(Ljava/lang/Object;)Z"->"net.mooctest.MonthTest.testEquals5()V";
    "net.mooctest.Year.setCurrentPos(I)V"->"net.mooctest.Year.setYear(I)V";
    "net.mooctest.Year.isValid()Z"->"net.mooctest.Year.setYear(I)V";
    "net.mooctest.Year.increment()Z"->"net.mooctest.YearTest.testIncrement6()V";
    "net.mooctest.Month.setMonth(ILnet/mooctest/Year;)V"->"net.mooctest.MonthTest.testSetMonth2()V";
    "net.mooctest.Date.equals(Ljava/lang/Object;)Z"->"net.mooctest.DateTest.testEquals2()V";
    "net.mooctest.Month.getMonthSize()I"->"net.mooctest.Day.isValid()Z";
    "net.mooctest.Month.isValid()Z"->"net.mooctest.Day.isValid()Z";
    "net.mooctest.Year.isValid()Z"->"net.mooctest.YearTest.testIsValid3()V";
    "net.mooctest.Month.equals(Ljava/lang/Object;)Z"->"net.mooctest.MonthTest.testEquals6()V";
    "net.mooctest.Month.increment()Z"->"net.mooctest.MonthTest.testIncrement1()V";
    "net.mooctest.Month.setMonth(ILnet/mooctest/Year;)V"->"net.mooctest.MonthTest.testSetMonth3()V";
    "net.mooctest.Date.equals(Ljava/lang/Object;)Z"->"net.mooctest.DateTest.testEquals3()V";
    "net.mooctest.Date.<init>(III)V"->"net.mooctest.DateTest.testEquals3()V";
    "net.mooctest.Year.equals(Ljava/lang/Object;)Z"->"net.mooctest.Month.equals(Ljava/lang/Object;)Z";
    "net.mooctest.Month.increment()Z"->"net.mooctest.MonthTest.testIncrement2()V";
    "net.mooctest.Date.equals(Ljava/lang/Object;)Z"->"net.mooctest.DateTest.testEquals4()V";
    "net.mooctest.Date.<init>(III)V"->"net.mooctest.DateTest.testEquals4()V";
    "net.mooctest.Month.increment()Z"->"net.mooctest.MonthTest.testIncrement3()V";
    "net.mooctest.Date.equals(Ljava/lang/Object;)Z"->"net.mooctest.DateTest.testEquals5()V";
    "net.mooctest.Date.<init>(III)V"->"net.mooctest.DateTest.testEquals5()V";
    "net.mooctest.Day.increment()Z"->"net.mooctest.DayTest.testIncrement1()V";
    "net.mooctest.Day.getDay()I"->"net.mooctest.Date.toString()Ljava/lang/String;";
    "net.mooctest.Month.getMonth()I"->"net.mooctest.Date.toString()Ljava/lang/String;";
    "net.mooctest.Year.getYear()I"->"net.mooctest.Date.toString()Ljava/lang/String;";
    "net.mooctest.Month.increment()Z"->"net.mooctest.MonthTest.testIncrement4()V";
    "net.mooctest.Date.equals(Ljava/lang/Object;)Z"->"net.mooctest.DateTest.testEquals6()V";
    "net.mooctest.Date.<init>(III)V"->"net.mooctest.DateTest.testEquals6()V";
    "net.mooctest.Day.increment()Z"->"net.mooctest.DayTest.testIncrement2()V";
    "net.mooctest.Year.<init>(I)V"->"net.mooctest.CalendarUnitTest.test0()V";
    "net.mooctest.Year.setCurrentPos(I)V"->"net.mooctest.CalendarUnitTest.test0()V";
    "net.mooctest.Year.getCurrentPos()I"->"net.mooctest.CalendarUnitTest.test0()V";
    "net.mooctest.Year.getYear()I"->"net.mooctest.CalendarUnitTest.test0()V";
    "net.mooctest.Month.increment()Z"->"net.mooctest.MonthTest.testIncrement5()V";
    "net.mooctest.Day.increment()Z"->"net.mooctest.DayTest.testIncrement3()V";
    "net.mooctest.Year.<init>(I)V"->"net.mooctest.CalendarUnitTest.test1()V";
    "net.mooctest.Year.getCurrentPos()I"->"net.mooctest.CalendarUnitTest.test1()V";
    "net.mooctest.Month.increment()Z"->"net.mooctest.MonthTest.testIncrement6()V";
    "net.mooctest.Day.increment()Z"->"net.mooctest.DayTest.testIncrement4()V";
    "net.mooctest.Year.<init>(I)V"->"net.mooctest.CalendarUnitTest.test2()V";
    "net.mooctest.Year.getCurrentPos()I"->"net.mooctest.CalendarUnitTest.test2()V";
    "net.mooctest.Date.printDate()V"->"net.mooctest.DateTest.testPrintDate()V";
    "net.mooctest.Day.increment()Z"->"net.mooctest.DayTest.testIncrement5()V";
    "net.mooctest.Day.increment()Z"->"net.mooctest.DayTest.testIncrement6()V";
    "net.mooctest.Year.<init>(I)V"->"net.mooctest.DayTest.<init>()V";
    "net.mooctest.Day.<init>(ILnet/mooctest/Month;)V"->"net.mooctest.DayTest.<init>()V";
    "net.mooctest.Month.<init>(ILnet/mooctest/Year;)V"->"net.mooctest.DayTest.<init>()V";
    "net.mooctest.Month.equals(Ljava/lang/Object;)Z"->"net.mooctest.Day.equals(Ljava/lang/Object;)Z";
    "net.mooctest.Year.isValid()Z"->"net.mooctest.Month.isValid()Z";
    "net.mooctest.Year.setYear(I)V"->"net.mooctest.YearTest.testSetYearException()V";
    "net.mooctest.Month.getMonthSize()I"->"net.mooctest.MonthTest.testGetMonthSize1()V";
    "net.mooctest.Date.<init>(III)V"->"net.mooctest.DateTest.<init>()V";
    "net.mooctest.Year.setYear(I)V"->"net.mooctest.YearTest.testSetYear()V";
    "net.mooctest.Month.getMonthSize()I"->"net.mooctest.MonthTest.testGetMonthSize2()V";
    "net.mooctest.Month.getMonthSize()I"->"net.mooctest.MonthTest.testGetMonthSize3()V";
    "net.mooctest.Year.<init>(I)V"->"net.mooctest.Date.<init>(III)V";
    "net.mooctest.Day.<init>(ILnet/mooctest/Month;)V"->"net.mooctest.Date.<init>(III)V";
    "net.mooctest.Month.<init>(ILnet/mooctest/Year;)V"->"net.mooctest.Date.<init>(III)V";
    "net.mooctest.Day.setDay(ILnet/mooctest/Month;)V"->"net.mooctest.DayTest.testSetDay1()V";
    "net.mooctest.Month.<init>(ILnet/mooctest/Year;)V"->"net.mooctest.DayTest.testSetDay1()V";
    "net.mooctest.Date.toString()Ljava/lang/String;"->"net.mooctest.DateTest.testToString()V";
    "net.mooctest.Day.setDay(ILnet/mooctest/Month;)V"->"net.mooctest.DayTest.testSetDay2()V";
    "net.mooctest.Month.<init>(ILnet/mooctest/Year;)V"->"net.mooctest.DayTest.testSetDay2()V";
    "net.mooctest.Month.setCurrentPos(I)V"->"net.mooctest.Month.setMonth(ILnet/mooctest/Year;)V";
    "net.mooctest.Month.isValid()Z"->"net.mooctest.Month.setMonth(ILnet/mooctest/Year;)V";
    "net.mooctest.Day.getDay()I"->"net.mooctest.Date.printDate()V";
    "net.mooctest.Month.getMonth()I"->"net.mooctest.Date.printDate()V";
    "net.mooctest.Year.getYear()I"->"net.mooctest.Date.printDate()V";
    "net.mooctest.Day.setDay(ILnet/mooctest/Month;)V"->"net.mooctest.DayTest.testSetDay3()V";
    "net.mooctest.Year.<init>(I)V"->"net.mooctest.MonthTest.<init>()V";
    "net.mooctest.Month.<init>(ILnet/mooctest/Year;)V"->"net.mooctest.MonthTest.<init>()V";
    "net.mooctest.Day.setCurrentPos(I)V"->"net.mooctest.Day.setDay(ILnet/mooctest/Month;)V";
    "net.mooctest.Day.isValid()Z"->"net.mooctest.Day.setDay(ILnet/mooctest/Month;)V";
    "net.mooctest.CalendarUnit.<init>()V"->"net.mooctest.Day.<init>(ILnet/mooctest/Month;)V";
    "net.mooctest.Day.setDay(ILnet/mooctest/Month;)V"->"net.mooctest.Day.<init>(ILnet/mooctest/Month;)V";
    "net.mooctest.Day.getCurrentPos()I"->"net.mooctest.DayTest.testGetCurrentPos()V";
    "net.mooctest.Day.isValid()Z"->"net.mooctest.DayTest.testIsValid()V";
    "net.mooctest.Day.setCurrentPos(I)V"->"net.mooctest.DayTest.testSetCurrentPos()V";
    "net.mooctest.Month.equals(Ljava/lang/Object;)Z"->"net.mooctest.Date.equals(Ljava/lang/Object;)Z";
    "net.mooctest.Year.equals(Ljava/lang/Object;)Z"->"net.mooctest.Date.equals(Ljava/lang/Object;)Z";
    "net.mooctest.Day.equals(Ljava/lang/Object;)Z"->"net.mooctest.Date.equals(Ljava/lang/Object;)Z";
    "net.mooctest.Month.getCurrentPos()I"->"net.mooctest.Nextday.nextDay(Lnet/mooctest/Date;)Lnet/mooctest/Date;";
    "net.mooctest.Date.getDay()Lnet/mooctest/Day;"->"net.mooctest.Nextday.nextDay(Lnet/mooctest/Date;)Lnet/mooctest/Date;";
    "net.mooctest.Day.getCurrentPos()I"->"net.mooctest.Nextday.nextDay(Lnet/mooctest/Date;)Lnet/mooctest/Date;";
    "net.mooctest.Date.<init>(III)V"->"net.mooctest.Nextday.nextDay(Lnet/mooctest/Date;)Lnet/mooctest/Date;";
    "net.mooctest.Year.getCurrentPos()I"->"net.mooctest.Nextday.nextDay(Lnet/mooctest/Date;)Lnet/mooctest/Date;";
    "net.mooctest.Date.increment()V"->"net.mooctest.Nextday.nextDay(Lnet/mooctest/Date;)Lnet/mooctest/Date;";
    "net.mooctest.Date.getYear()Lnet/mooctest/Year;"->"net.mooctest.Nextday.nextDay(Lnet/mooctest/Date;)Lnet/mooctest/Date;";
    "net.mooctest.Date.getMonth()Lnet/mooctest/Month;"->"net.mooctest.Nextday.nextDay(Lnet/mooctest/Date;)Lnet/mooctest/Date;";
    "net.mooctest.Month.setCurrentPos(I)V"->"net.mooctest.MonthTest.testSetCurrentPos()V";
    "net.mooctest.Year.<init>(I)V"->"net.mooctest.YearTest.testEquals1()V";
    "net.mooctest.Year.equals(Ljava/lang/Object;)Z"->"net.mooctest.YearTest.testEquals1()V";
    "net.mooctest.Month.isValid()Z"->"net.mooctest.MonthTest.testIsValid1()V";
    "net.mooctest.Year.<init>(I)V"->"net.mooctest.YearTest.testEquals2()V";
    "net.mooctest.Year.equals(Ljava/lang/Object;)Z"->"net.mooctest.YearTest.testEquals2()V";
    "net.mooctest.Day.getDay()I"->"net.mooctest.DayTest.testGetDay()V";
    "net.mooctest.Year.equals(Ljava/lang/Object;)Z"->"net.mooctest.YearTest.testEquals3()V";
    "net.mooctest.Month.getCurrentPos()I"->"net.mooctest.MonthTest.testGetCurrentPos()V";
    "net.mooctest.Year.equals(Ljava/lang/Object;)Z"->"net.mooctest.YearTest.testEquals4()V";
    "net.mooctest.Year.isLeap()Z"->"net.mooctest.Month.getMonthSize()I";
    "net.mooctest.Year.setCurrentPos(I)V"->"net.mooctest.YearTest.testSetCurrent()V";
    "net.mooctest.Nextday.<init>()V"->"net.mooctest.NextdayTest.<init>()V";
    "net.mooctest.Day.equals(Ljava/lang/Object;)Z"->"net.mooctest.DayTest.testEquals1()V";
    "net.mooctest.Year.<init>(I)V"->"net.mooctest.YearTest.<init>()V";
    "net.mooctest.Day.equals(Ljava/lang/Object;)Z"->"net.mooctest.DayTest.testEquals2()V";
    "net.mooctest.Nextday.nextDay(Lnet/mooctest/Date;)Lnet/mooctest/Date;"->"net.mooctest.NextdayTest.test()V";
    "net.mooctest.Date.<init>(III)V"->"net.mooctest.NextdayTest.test()V";
    "net.mooctest.Day.<init>(ILnet/mooctest/Month;)V"->"net.mooctest.DayTest.testEquals3()V";
    "net.mooctest.Day.equals(Ljava/lang/Object;)Z"->"net.mooctest.DayTest.testEquals3()V";
    "net.mooctest.Month.getMonth()I"->"net.mooctest.MonthTest.testGetMonth()V";
    "net.mooctest.Month.setMonth(ILnet/mooctest/Year;)V"->"net.mooctest.Date.increment()V";
    "net.mooctest.Day.setDay(ILnet/mooctest/Month;)V"->"net.mooctest.Date.increment()V";
    "net.mooctest.Month.increment()Z"->"net.mooctest.Date.increment()V";
    "net.mooctest.Year.increment()Z"->"net.mooctest.Date.increment()V";
    "net.mooctest.Day.increment()Z"->"net.mooctest.Date.increment()V";
    "net.mooctest.Month.setMonth(ILnet/mooctest/Year;)V"->"net.mooctest.Month.<init>(ILnet/mooctest/Year;)V";
    "net.mooctest.CalendarUnit.<init>()V"->"net.mooctest.Month.<init>(ILnet/mooctest/Year;)V";
    "net.mooctest.Day.<init>(ILnet/mooctest/Month;)V"->"net.mooctest.DayTest.testEquals4()V";
    "net.mooctest.Month.<init>(ILnet/mooctest/Year;)V"->"net.mooctest.DayTest.testEquals4()V";
    "net.mooctest.Day.equals(Ljava/lang/Object;)Z"->"net.mooctest.DayTest.testEquals4()V";
    "net.mooctest.Day.<init>(ILnet/mooctest/Month;)V"->"net.mooctest.DayTest.testEquals5()V";
    "net.mooctest.Day.equals(Ljava/lang/Object;)Z"->"net.mooctest.DayTest.testEquals5()V";
    "net.mooctest.Year.getCurrentPos()I"->"net.mooctest.YearTest.testGetCurrent()V";
    "net.mooctest.Month.getMonthSize()I"->"net.mooctest.Day.increment()Z";
    "net.mooctest.Date.getDay()Lnet/mooctest/Day;"->"net.mooctest.DateTest.testIncrement1()V";
    "net.mooctest.Date.increment()V"->"net.mooctest.DateTest.testIncrement1()V";
    "net.mooctest.Date.getYear()Lnet/mooctest/Year;"->"net.mooctest.DateTest.testIncrement1()V";
    "net.mooctest.Date.getMonth()Lnet/mooctest/Month;"->"net.mooctest.DateTest.testIncrement1()V";
    "net.mooctest.Date.getDay()Lnet/mooctest/Day;"->"net.mooctest.DateTest.testIncrement2()V";
    "net.mooctest.Date.<init>(III)V"->"net.mooctest.DateTest.testIncrement2()V";
    "net.mooctest.Date.increment()V"->"net.mooctest.DateTest.testIncrement2()V";
    "net.mooctest.Date.getYear()Lnet/mooctest/Year;"->"net.mooctest.DateTest.testIncrement2()V";
    "net.mooctest.Date.getMonth()Lnet/mooctest/Month;"->"net.mooctest.DateTest.testIncrement2()V";
}